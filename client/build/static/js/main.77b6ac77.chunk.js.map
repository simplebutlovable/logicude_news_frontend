{"version":3,"sources":["utility/axios.js","utility/Themes.js","utility/globalStyles.js","Components/globalTemplates/navbar.jsx","Components/globalTemplates/footer.jsx","Components/globalTemplates/readMore.jsx","Components/globalTemplates/newsDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["serverURL","axiosInstance","axios","create","baseURL","timeout","lightTheme","body","text","toggleBorder","background","site_img","mode_icon","darkTheme","GlobalStyles","createGlobalStyle","theme","currentDate","Date","toLocaleDateString","weekday","year","month","day","SubNavigation","props","useState","expandedMenu","setExpandedMenu","Fragment","MobileMenu","closeBtn","className","style","mode","backgroundColor","transition","to","src","alt","Search","viewport_mode","onClick","Navigation","date","setDate","useEffect","timer","setInterval","clearInterval","NightMode","onThemeChange","search_icon","useRef","search","search_input","ref","type","name","id","placeholder","disabled","searchIconClass","current","classList","searchClass","searchInputClass","add","focus","Footer","getFullYear","ReadMore","loader","setLoader","fetchData","setFetchData","errorLog","setErrorLog","get","category","then","res","data","catch","err","response","textAlign","width","color","map","news","key","clearState","display_image","title","substring","fromNow","date_posted","NewsDetails","setloader","newsContent","setNewsContent","alsoReadContent","setAsloReadContent","alsoReadError","setAlsoReadError","match","params","window","scrollTo","console","log","str","author","description","charAt","toUpperCase","slice","sanitizer","DOMPurify","sanitize","USE_PROFILES","html","dangerouslySetInnerHTML","__html","setDescription","read","LandingPage","React","lazy","ContentNotFound","ScienceComponent","GadgetsComponent","GamesComponent","StreamingComponent","AboutComponent","App","setTheme","fallback","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.77b6ac77.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const serverURL = 'http://192.168.254.168:8000'\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL : serverURL,\r\n    timeout : 100000,\r\n});\r\n\r\n\r\n// axiosInstance.interceptors.response.use(\r\n//   (response) => {\r\n//     console.log(\"Instance Respose\", response)\r\n//     return response;\r\n//   },\r\n//   (error) => {\r\n//       console.log(\"Generating New Refresh Token\")\r\n//     return new Promise((resolve) => {\r\n//       const originalRequest = error.config\r\n//       const refreshToken = localStorage.getItem('refresh token')\r\n    \r\n//       if (error.response && error.response.status === 401 && error.config && !error.config.__isRetryRequest && refreshToken) {\r\n//         originalRequest._retry = true;\r\n        \r\n//         const response = fetch('http://192.168.254.135:8000/api/token/refresh/', {\r\n//           method: 'POST',\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//           body: JSON.stringify({\r\n//             refresh: refreshToken,\r\n//           }),\r\n//         })\r\n//           .then((res) => res.json())\r\n//           .then((res) => {\r\n//             localStorage.setItem('access token', res.access)\r\n//                 error.config.headers.Authorization = \"Bearer \"+localStorage.getItem('access token');\r\n//                 return axiosInstance(originalRequest);\r\n//           })\r\n//           .catch((err)=>{\r\n//               console.log(\"Error: \", err)\r\n//           })\r\n          \r\n//         resolve(response)\r\n//       }\r\n\r\n//       return Promise.reject(error)\r\n//     })\r\n//   },\r\n// )\r\n\r\nexport default axiosInstance;","export const lightTheme = {\r\n    body: '#FFF',\r\n    text: '#363537',\r\n    toggleBorder: '#FFF',\r\n    background: '#363537',\r\n    site_img : process.env.PUBLIC_URL + \"/images/logiclude_light_mode.png\",\r\n    mode_icon : process.env.PUBLIC_URL + \"/images/day.png\",\r\n}\r\nexport const darkTheme = {\r\n    body: '#242836',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#6B8096',\r\n    background: '#999',\r\n    site_img : process.env.PUBLIC_URL + \"/images/logiclude_dark_mode.png\",\r\n    mode_icon : process.env.PUBLIC_URL + \"/images/night.png\",\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\nbody{\r\n    background: ${({ theme }) => theme.body};\r\n    color : ${({ theme })=> theme.text};\r\n    transition: background 0.50s linear;\r\n}\r\n\r\n`","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"../../Style/generalTemplates/navbar.css\";\r\nimport { darkTheme, lightTheme } from \"../../utility/Themes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction currentDate() {\r\n  const params = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n  const date = new Date().toLocaleDateString(\"en-US\", params);\r\n  return date;\r\n}\r\n\r\nfunction Navigation(props) {\r\n  const [date, setDate] = useState(currentDate);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setDate(currentDate);\r\n    });\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"navbar\">\r\n        <div className=\"menu\">\r\n          <div className=\"realtime_date_section\">\r\n            <p> {date}</p>\r\n          </div>\r\n          <div className=\"right_menu\">\r\n            <div className=\"night_mode_section\">\r\n              <NightMode\r\n                onThemeChange={props.onThemeChange}\r\n                mode={props.mode}\r\n              />\r\n            </div>\r\n            <div className=\"social_media_section\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/fb_logo.png\"}\r\n                alt=\"news_fb\"\r\n              />\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/twitter.png\"}\r\n                alt=\"news_twitter\"\r\n              />\r\n            </div>\r\n            <div className=\"search_section\">\r\n              <Search viewport_mode=\"desktop\" mode={props.mode} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <SubNavigation mode={props.mode} onThemeChange={props.onThemeChange} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction SubNavigation(props) {\r\n  const [expandedMenu, setExpandedMenu] = useState(false);\r\n  function menuShow() {\r\n    setExpandedMenu(true);\r\n  }\r\n\r\n  function closeMenu() {\r\n    setExpandedMenu(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {expandedMenu ? <MobileMenu closeBtn={closeMenu} /> : null}\r\n      <div\r\n        className=\"subnav\"\r\n        style={\r\n          props.mode === \"light\"\r\n            ? { backgroundColor: \"white\", transition: \"0.5s linear\" }\r\n            : { backgroundColor: darkTheme.body, transition: \"0.5s linear\" }\r\n        }\r\n      >\r\n        <div className=\"subnav_container\">\r\n          <div className=\"site_logo\">\r\n            <Link to=\"/\">\r\n              <img\r\n                src={\r\n                  props.mode === \"light\"\r\n                    ? lightTheme.site_img\r\n                    : darkTheme.site_img\r\n                }\r\n                alt=\"Logiclude\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\" className=\"__link\">\r\n                  HOME\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/science\" className=\"__link\">\r\n                  SCIENCE\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/gadgets\" className=\"__link\">\r\n                  GADGETS\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/games\" className=\"__link\">\r\n                  GAMES\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/stream\" className=\"__link\">\r\n                  STREAMING\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/about\" className=\"__link\">\r\n                  ABOUT\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n          <div className=\"mobile_access_right\">\r\n            <div className=\"mobile_search\">\r\n              <Search viewport_mode=\"mobile\" mode={props.mode} />\r\n            </div>\r\n\r\n            <div className=\"mobile_nav\">\r\n              <div\r\n                className={\r\n                  props.mode === \"light\"\r\n                    ? \"burger_menu m_light\"\r\n                    : \"burger_menu m_dark\"\r\n                }\r\n                onClick={menuShow}\r\n              >\r\n                <div className=\"b_1 b_line\"></div>\r\n                <div className=\"b_2 b_line\"></div>\r\n                <div className=\"b_3 b_line\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n\r\nfunction Search(props) {\r\n  const search_icon = useRef();\r\n  const search = useRef();\r\n  const search_input = useRef();\r\n  // Search Expansion Function\r\n  function searchAnimate() {\r\n    let { classList: searchIconClass } = search_icon.current;\r\n    let { classList: searchClass } = search.current;\r\n    let { classList: searchInputClass } = search_input.current;\r\n    searchIconClass.add(\"search_icon_active\");\r\n    searchClass.add(\"search_active\");\r\n    searchInputClass.add(\"input_active\");\r\n    search_input.current.disabled = false;\r\n    search_input.current.focus();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className={\r\n          props.mode === \"light\" && props.viewport_mode === \"mobile\"\r\n            ? \"search m_search_light\"\r\n            : \"search m_search_dark\"\r\n        }\r\n        ref={search}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"search__input\"\r\n          id={props.viewport_mode}\r\n          placeholder=\"Search\"\r\n          ref={search_input}\r\n          disabled={true}\r\n        />\r\n        <img\r\n          ref={search_icon}\r\n          onClick={searchAnimate}\r\n          src={process.env.PUBLIC_URL + \"/svg/search_icon.svg\"}\r\n          alt=\"search\"\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction NightMode(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"night_mode_switch\">\r\n        <div\r\n          className={\r\n            props.mode === \"light\"\r\n              ? \"night_container light_switch_container\"\r\n              : \"night_container dark_switch_container\"\r\n          }\r\n          onClick={() => props.onThemeChange()}\r\n        >\r\n          <div\r\n            className={\r\n              props.mode === \"light\"\r\n                ? \"toggler light_toggle\"\r\n                : \"toggler dark_toggle\"\r\n            }\r\n          >\r\n            <div className=\"night_mode_icon\">\r\n              <img\r\n                src={\r\n                  props.mode === \"light\"\r\n                    ? lightTheme.mode_icon\r\n                    : darkTheme.mode_icon\r\n                }\r\n                alt={props.mode}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              props.mode === \"light\"\r\n                ? \"toggle_label label_left\"\r\n                : \"toggle_label label_right\"\r\n            }\r\n          >\r\n            {props.mode === \"light\" ? <p>LIGHT</p> : <p>DARK</p>}\r\n            <p>MODE</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction MobileMenu(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mobile_menu\">\r\n        <div className=\"mobile_menu_header\">\r\n          <h1>LOGO</h1>\r\n          <div className=\"close_btn\" onClick={() => props.closeBtn()}>\r\n            X\r\n          </div>\r\n        </div>\r\n        <div className=\"mobile_menu_list\">\r\n          <ul>\r\n            <li>HOME</li>\r\n            <li>SCIENCE</li>\r\n            <li>GADGETS</li>\r\n            <li>GAMES</li>\r\n            <li>STREAMING</li>\r\n            <li>ABOUT</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../../Style/generalTemplates/footer.css\";\r\nimport { darkTheme, lightTheme } from \"../../utility/Themes\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"footer\">\r\n        <div className=\"footer_container\">\r\n          <div className=\"footer_info\">\r\n            <img src={props.mode === 'light' ?lightTheme.site_img : darkTheme.site_img } alt=\"logiclude\"/>\r\n            <p>&copy; logiclude inc.</p>\r\n            <p>Designed and Maintaned by :@simplebutlovable</p>\r\n            <p>All Rights Reserved {new Date().getFullYear()}</p>\r\n          </div>\r\n          <div className=\"advertise\">\r\n            <h1>Advertise with us</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport Loader from 'react-loader-spinner';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../Style/generalTemplates/read-more.css\";\r\nimport axiosInstance, { serverURL } from \"../../utility/axios\";\r\n\r\nfunction ReadMore(props) {\r\n  const [loader, setLoader] = useState(true);\r\n  const [fetchData, setFetchData] = useState(null);\r\n  const [errorLog, setErrorLog] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(`/api/news/readmore/${props.category}/${props.id}/`)\r\n      .then((res) => {\r\n        setFetchData(res.data);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        setErrorLog(err.response);\r\n        setLoader(false);\r\n      });\r\n  }, [props.category, props.id]);\r\n\r\n  if (loader === true) {\r\n    return (\r\n      <div style={{ textAlign: \"center\", width: \"100%\" }}>\r\n        <Loader type=\"TailSpin\" color=\"gray\" width={40} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (errorLog !== null){\r\n    return (<p>Something went wrong :/</p>)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"read_more_section\">\r\n          <ul>\r\n            {fetchData.map((news) => (\r\n              <li key={news.id}>\r\n                <Link to={`/news/${news.id}/`} className=\"_link\" onClick={()=>props.clearState()}>\r\n                  <div className=\"read_list\">\r\n                    <div className=\"read_news_img\">\r\n                      <img\r\n                        src={`${serverURL}${news.display_image}`}\r\n                        alt={news.title.substring(0, 15)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"read_news_title\">\r\n                      <h3>{news.title}</h3>\r\n                      <div className=\"read_news_details\">\r\n                        <p>\r\n                          <Moment fromNow>{news.date_posted}</Moment>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ReadMore;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport axiosInstance from \"../../utility/axios\";\r\nimport Moment from \"react-moment\";\r\nimport \"../../Style/generalTemplates/news_details.css\";\r\nimport DOMPurify from \"dompurify\";\r\nimport ReadMore from \"./readMore\";\r\n\r\nfunction NewsDetails(props) {\r\n  const [loader, setloader] = useState(true);\r\n  const [newsContent, setNewsContent] = useState(null);\r\n  const [errorLog, setErrorLog] = useState(null);\r\n  const [alsoReadContent, setAsloReadContent] = useState(null);\r\n  const [alsoReadError, setAlsoReadError] = useState(null);\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(`/api/news/details/${props.match.params.id}/`)\r\n      .then((res) => {\r\n        setNewsContent(res.data);\r\n        setloader(false);\r\n      })\r\n      .catch((err) => {\r\n        setErrorLog(err.response);\r\n        setloader(false);\r\n      });\r\n\r\n    window.scrollTo(0, 0);\r\n  }, [props.match.params.id]);\r\n\r\n  useEffect(() => {\r\n    if (newsContent !== null) {\r\n      axiosInstance\r\n        .get(\r\n          `/api/news/alsoread/${newsContent.category}/${props.match.params.id}`\r\n        )\r\n        .then((res) => {\r\n          setAsloReadContent(res.data);\r\n        })\r\n        .catch((err) => {\r\n          setAlsoReadError(err.response);\r\n        });\r\n    }\r\n  }, [newsContent, props.match.params.id]);\r\n\r\n  if (errorLog !== null) {\r\n    console.log(\"Error: \", errorLog);\r\n  }\r\n  function clearState() {\r\n    setNewsContent(null);\r\n    setErrorLog(null);\r\n    setloader(true);\r\n  }\r\n\r\n  if (loader) {\r\n    return (\r\n      <div className=\"parent_loader\">\r\n        <div className=\"loader_container\">\r\n          <Loader type=\"TailSpin\" color=\"gray\" width={40} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const {\r\n    id,\r\n    title,\r\n    author,\r\n    date_posted,\r\n    category,\r\n    description,\r\n    display_image,\r\n  } = newsContent;\r\n\r\n  function setDescription() {\r\n    const sanitizer = DOMPurify.sanitize(description, {\r\n      USE_PROFILES: { html: true },\r\n    });\r\n\r\n    return (\r\n      <div\r\n        className=\"description\"\r\n        dangerouslySetInnerHTML={{ __html: sanitizer }}\r\n      />\r\n    );\r\n  }\r\n\r\n  function Capitalize(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      <div className=\"news_feed\">\r\n        <div className=\"news_details\">\r\n          <div className=\"headline_img\">\r\n            <img src={`${display_image}`} alt={title} />\r\n          </div>\r\n          <div className=\"f_post_details\">\r\n            <small>\r\n              Posted:\r\n              <Moment fromNow>{date_posted}</Moment>\r\n            </small>\r\n            <small>Author: {author}</small>\r\n          </div>\r\n          <div className=\"category\">\r\n            {category ? (\r\n              <Link to={`/${category}`} className=\"cat_list\" key={id}>\r\n                {Capitalize(category)}\r\n              </Link>\r\n            ) : (\r\n              <p>Category Not Secified</p>\r\n            )}\r\n          </div>\r\n          <div className=\"f_title\">\r\n            <h1>{title}</h1>\r\n          </div>\r\n          <div className=\"f_description\">\r\n            <h3>{setDescription()}</h3>\r\n          </div>\r\n\r\n          <div className=\"also_read\">\r\n            <div className=\"read_header\">\r\n              <h3>Also Read</h3>\r\n            </div>\r\n            <div className=\"also_read_list\">\r\n              <ul>\r\n                {alsoReadError === null && alsoReadContent === null ? (\r\n                  <h1>Loading...</h1>\r\n                ) : (\r\n                  alsoReadContent.map((read) => (\r\n                    <li key={read.id}>\r\n                      <Link\r\n                        to={`/news/${read.id}/`}\r\n                        className=\"also_link\"\r\n                        onClick={clearState}\r\n                      >\r\n                        {read.title}\r\n                      </Link>\r\n                    </li>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"read_more\">\r\n          <div className=\"read_more_header\">\r\n            <h1>Read More</h1>\r\n          </div>\r\n          <ReadMore\r\n            clearState={clearState}\r\n            category={newsContent.category}\r\n            id={newsContent.id}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NewsDetails;\r\n","import React, { useState, Suspense } from \"react\";\r\nimport \"./App.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { HelmetProvider } from 'react-helmet-async';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles } from \"./utility/globalStyles\";\r\nimport { lightTheme, darkTheme } from \"./utility/Themes\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"./Components/globalTemplates/navbar\";\r\nimport Footer from \"./Components/globalTemplates/footer\";\r\nimport NewsDetails from \"./Components/globalTemplates/newsDetails\";\r\n// import LandingPage from './Components/landingpage';\r\n// import ScienceComponent from './Components/scienceComponent';\r\n// import StreamingComponent from './Components/streamingComponent';\r\n// import ContentNotFound from './Components/globalTemplates/contentNotFound';\r\n// import GadgetsComponent from './Components/gadgetsComponent';\r\n// import GamesComponent from './Components/gamesComponent';\r\n// import AboutComponent from './Components/aboutComponent';\r\n\r\nconst LandingPage = React.lazy(() => import(\"./Components/landingpage\"));\r\nconst ContentNotFound = React.lazy(() =>\r\n  import(\"./Components/globalTemplates/contentNotFound\")\r\n);\r\nconst ScienceComponent = React.lazy(() =>\r\n  import(\"./Components/scienceComponent\")\r\n);\r\nconst GadgetsComponent = React.lazy(() =>\r\n  import(\"./Components/gadgetsComponent\")\r\n);\r\nconst GamesComponent = React.lazy(() => import(\"./Components/gamesComponent\"));\r\nconst StreamingComponent = React.lazy(() =>\r\n  import(\"./Components/streamingComponent\")\r\n);\r\n\r\nconst AboutComponent = React.lazy(() => import(\"./Components/aboutComponent\"));\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const themeToggler = () => {\r\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\r\n  };\r\n\r\n  return (\r\n    <HelmetProvider>\r\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      <GlobalStyles />\r\n      <div className=\"app\">\r\n        <Router>\r\n          <div className=\"navigation\">\r\n            <Navigation onThemeChange={themeToggler} mode={theme} />\r\n          </div>\r\n          <Suspense\r\n            fallback={\r\n              <div className=\"parent_loader\">\r\n                <div className=\"loader_container\">\r\n                  <Loader type=\"TailSpin\" color=\"gray\" width={40} />\r\n                </div>\r\n              </div>\r\n            }\r\n          >\r\n            <Switch>\r\n              <Route exact path=\"/\" component={()=><LandingPage mode={theme}/>} />\r\n              <Route exact path=\"/science\" component={ScienceComponent} />\r\n              <Route exact path=\"/gadgets\" component={GadgetsComponent} />\r\n              <Route exact path=\"/games\" component={GamesComponent} />\r\n              <Route exact path=\"/stream\" component={StreamingComponent} />\r\n              <Route\r\n                exact\r\n                path=\"/about\"\r\n                component={() => <AboutComponent mode={theme} />}\r\n              />\r\n              <Route path=\"/news/:id\" component={NewsDetails} />\r\n\r\n              {/* Fallback Directory (404) */}\r\n              <Route path=\"*\" component={ContentNotFound} />\r\n            </Switch>\r\n          </Suspense>\r\n          <Footer mode={theme} />\r\n        </Router>\r\n      </div>\r\n    </ThemeProvider>\r\n    </HelmetProvider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}